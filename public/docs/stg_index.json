{
  "swagger": "2.0",
  "info": {
    "description": "This a api docs",
    "version": "0.0.1",
    "title": "Driver api docs",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/sns_api"
    }
  },
  "host": "stg.myxxjs.com:9901/api/",

  "tags": [
    {
      "name": "adminUser",
      "description": "adminUser version and url management api (操作员管理)"
    },
    {
      "name": "user",
      "description": "User version and url management api (用户基本管理)"
    },
    {
      "name": "userDetail",
      "description": "UserDetail version and url management api (用户详细信息管理)"
    },
    {
      "name": "relation",
      "description": "Relation version and url management api (用户关系管理)"
    },
    {
      "name": "praiseRecord",
      "description": "PraiseRecord version and url management api (用户点赞记录管理)"
    },
    {
      "name": "messages",
      "description": "Messages version and url management api (消息动态管理)"
    },
    {
      "name": "comments",
      "description": "comments version and url management api (评论管理)"
    },
    {
      "name": "commentsLevelTwo",
      "description": "commentsⅡ version and url management api (二级评论管理)"
    },

    {
      "name": "app",
      "description": "App version and url management api (版本管理)"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/adminLogin": {
      "post": {
        "tags": [
          "adminUser"
        ],
        "summary": "AdminUser login",
        "description": "",
        "operationId": "adminUser login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adminInfo",
            "description": "Admin base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser": {
      "post": {
        "tags": [
          "adminUser"
        ],
        "summary": "Add a new adminUser info",
        "description": "",
        "operationId": "addAdminUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "admin",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"adminInfo",
            "description": "AdminUser object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "adminUser"
        ],
        "summary": "Select adminUser info",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "query",
            "description": "管理员ID",
            "required": false,
            "type": "string"
          },{
            "name": "name",
            "in": "query",
            "description": "管理员名称",
            "required": false,
            "type": "string"
          },{
            "name": "realname",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "密码",
            "required": false,
            "type": "integer"
          },{
            "name": "gender",
            "in": "query",
            "description": "0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "管理员类型",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser/{adminUserId}": {
      "put": {
        "tags": [
          "adminUser"
        ],
        "summary": "Finds adminUser info and update",
        "description": "Update adminUser info",
        "operationId": "update adminUser info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "path",
            "description": "adminUser unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "adminUserInfo",
            "in": "body",
            "description": "AdminUser object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminUser"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser/{adminUserId}/status":{
      "put": {
        "tags": [
          "adminUser"
        ],
        "summary": "Administrator finds messages status and update",
        "description": "Administrator updates messages status",
        "operationId": "administrator update adminUser status by adminId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "path",
            "description": "AdminUser unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },

    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User login",
        "description": "",
        "operationId": "user login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userInfo",
            "description": "User base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user info and null userDetail info",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "用户电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "用户密码",
            "required": false,
            "type": "string"
          },{
            "name": "nikename",
            "in": "query",
            "description": "用户昵称",
            "required": false,
            "type": "string"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "auth_status",
            "in": "query",
            "description": "认证状态(0-未认证,1-已认证)",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（1-普通，2-会员）",
            "required": false,
            "type": "integer"
          },{
            "name": "last_login_on",
            "in": "query",
            "description": "最后一次登录时间",
            "required": false,
            "type": "date"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/userInfoAndDetail": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select userInfo and userDetail",
        "description": "Get userInfo and userDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update",
        "description": "Update user info",
        "operationId": "update user info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/user/{userId}/status":{
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo messages status and update",
        "description": "Updates userInfo messages status",
        "operationId": "Update user status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Administrators add a new user info and null userDetail info",
        "description": "",
        "operationId": "administrator adds users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Administrators select user Info",
        "description": "Administrators get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "用户电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "用户密码",
            "required": false,
            "type": "string"
          },{
            "name": "nikename",
            "in": "query",
            "description": "用户昵称",
            "required": false,
            "type": "string"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "auth_status",
            "in": "query",
            "description": "认证状态(0-未认证,1-已认证)",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（1-普通，2-会员）",
            "required": false,
            "type": "integer"
          },{
            "name": "last_login_on",
            "in": "query",
            "description": "最后一次登录时间",
            "required": false,
            "type": "date"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/userInfoAndDetail": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Administrators select userInfo and userDetail",
        "description": "Administrators get userInfo and userDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Administrators finds userInfo and update",
        "description": "Administrators updates user info",
        "operationId": "administrator updates user information by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/status":{
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Administrator finds userInfo messages status and update",
        "description": "Administrator updates userInfo messages status",
        "operationId": "administrator update user status by adminId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        }
      }
    },

    "/user/{userId}/userDetail": {
      "get": {
        "tags": [
          "userDetail"
        ],
        "summary": "Select userDetail info",
        "description": "Get userDetail info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "sex",
            "in": "query",
            "description": "性别0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "birthday",
            "in": "query",
            "description": "生日(格式：YYYY_MM_DD)",
            "required": false,
            "type": "date"
          },{
            "name": "realmname",
            "in": "query",
            "description": "个性域名",
            "required": false,
            "type": "string"
          },{
            "name": "intro",
            "in": "query",
            "description": "简介",
            "required": false,
            "type": "string"
          },{
            "name": "label",
            "in": "query",
            "description": "标签",
            "required": false,
            "type": "string"
          },{
            "name": "truename",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "avatar",
            "in": "query",
            "description": "用户头像",
            "required": false,
            "type": "string"
          },{
            "name": "drivingtype",
            "in": "query",
            "description": "驾驶证类型",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/userDetail/{userDetailId}": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Finds userDetail info and update",
        "description": "Update userDetail info",
        "operationId": "update userDetail info by userDetailId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/user/{userId}/updateDetail": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Finds userDetail info and update",
        "description": "Update userDetail info",
        "operationId": "update userDetail info by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/admin/{adminId}/userDetail": {
      "get": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators select userDetail info",
        "description": "Administrators get userDetail info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "_userId",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "sex",
            "in": "query",
            "description": "性别0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "birthday",
            "in": "query",
            "description": "生日(格式：YYYY_MM_DD)",
            "required": false,
            "type": "date"
          },{
            "name": "realmname",
            "in": "query",
            "description": "个性域名",
            "required": false,
            "type": "string"
          },{
            "name": "intro",
            "in": "query",
            "description": "简介",
            "required": false,
            "type": "string"
          },{
            "name": "label",
            "in": "query",
            "description": "标签",
            "required": false,
            "type": "string"
          },{
            "name": "truename",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "avatar",
            "in": "query",
            "description": "用户头像",
            "required": false,
            "type": "string"
          },{
            "name": "drivingtype",
            "in": "query",
            "description": "驾驶证类型",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/userDetail/{userDetailId}": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators finds userDetail info and update",
        "description": "Administrators update userDetail info",
        "operationId": "administrators update userdetail information by userdetailid",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/updateDetail": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators finds userDetail info and update",
        "description": "Administrators update userDetail info",
        "operationId": "administrators update userDetail info by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },

    "/user/{userId}/relation": {
      "post": {
        "tags": [
          "relation"
        ],
        "summary": "Add a new relation info",
        "description": "",
        "operationId": "addRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/follow": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Select followInfo",
        "description": "Get followInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/followUserInfo": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Select followInfo and userInfo",
        "description": "Get followInfo and userInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/attention": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Select attentionInfo",
        "description": "Get attentionInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "被关注用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/attentionUserInfo": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Select attentionInfo and userInfo",
        "description": "Get attentionInfo and userInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "被关注用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/relation/{relationId}/status": {
      "put": {
        "tags": [
          "relation"
        ],
        "summary": "Finds relation and update",
        "description": "Update relation info",
        "operationId": "update relation info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "path",
            "description": "relation unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/user/{userId}/relation/{relationId}/readStatus": {
      "put": {
        "tags": [
          "relation"
        ],
        "summary": "Finds relation readStatus and update",
        "description": "Update relation readStatus ",
        "operationId": "update relation readStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "path",
            "description": "relation unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/relation": {
      "post": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators add a new relation info",
        "description": "",
        "operationId": "Administrators add relation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/admin/{adminId}/user/{userId}/follow": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators select followInfo",
        "description": "Administrators get followInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/followUserInfo": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators select followInfo and userInfo",
        "description": "Administrators get followInfo and userInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/attention": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators select attentionInfo",
        "description": "Administrators get attentionInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "被关注用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/attentionUserInfo": {
      "get": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators select attentionInfo and userInfo",
        "description": "Administrators get attentionInfo and userInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "被关注用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "query",
            "description": "用户关系Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "关系类型（0-关注）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "关系组名（0-好友）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/relation/{relationId}/status": {
      "put": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators finds relation status and update",
        "description": "Administrators update relation status",
        "operationId": "Administrators update relation status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "path",
            "description": "relation unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/relation/{relationId}/readStatus": {
      "put": {
        "tags": [
          "relation"
        ],
        "summary": "Administrators finds relation readStatus and update",
        "description": "Administrators update relation readStatus info",
        "operationId": "Administrators update relation readStatus info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationId",
            "in": "path",
            "description": "relation unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },

    "/user/{userId}/messages/{messagesId}/praiseRecord": {
      "post": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Add a new messagesPraiseRecord info",
        "description": "",
        "operationId": "user add messagesPraiseRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"praiseRecordInfo",
            "description": "PraiseRecord object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/comments/{commentsId}/praiseRecord": {
      "post": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Add a new commentsPraiseRecord info",
        "description": "",
        "operationId": "user add commentsPraiseRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "comments unique id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"praiseRecordInfo",
            "description": "PraiseRecord object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/commentsLevelTwo/{commentsLevelTwoId}/praiseRecord": {
      "post": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Add a new commentsLevelTwoPraiseRecord info",
        "description": "",
        "operationId": "user add commentsLevelTwoPraiseRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "path",
            "description": "commentsLevelTwo unique id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"praiseRecordInfo",
            "description": "PraiseRecord object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/messagesPraiseRecord": {
      "get": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Select messagePraiseRecord Info",
        "description": "Get messagePraiseRecord Info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "praiseRecordId",
            "in": "query",
            "description": "点赞记录Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/commentsPraiseRecord": {
      "get": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Select commentsPraiseRecord Info",
        "description": "Get commentsPraiseRecord Info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "query",
            "description": "评论Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "praiseRecordId",
            "in": "query",
            "description": "点赞记录Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/commentsLevelTwoPraiseRecord": {
      "get": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Select commentsLevelTwo PraiseRecord Info",
        "description": "Get commentsLevelTwo PraiseRecord Info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "query",
            "description": "二级评论Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "praiseRecordId",
            "in": "query",
            "description": "点赞记录Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/user/{userId}/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Add a new messages info",
        "description": "",
        "operationId": "addMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "Messages object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Select messages Info",
        "description": "get messages info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "type",
            "in": "query",
            "description": "消息类型",
            "required": false,
            "type": "integer"
          },{
            "name": "info",
            "in": "query",
            "description": "消息内容",
            "required": false,
            "type": "string"
          },{
            "name": "collectNum",
            "in": "query",
            "description": "收藏次数",
            "required": false,
            "type": "integer"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "readNum",
            "in": "query",
            "description": "阅读次数",
            "required": false,
            "type": "integer"
          },{
            "name": "label",
            "in": "query",
            "description": "消息标签",
            "required": false,
            "type": "string"
          },{
            "name": "multi_media",
            "in": "query",
            "description": "图片/视频",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/searchByRadius": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Select searchByRadius Info",
        "description": "Get searchByRadius info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "地理位置（格式： [纬度，经度]）",
            "required": true,
            "type": "string"
          },{
            "name": "radius",
            "in": "query",
            "description": "查询半径(单位：KM)",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}/status":{
      "put": {
        "tags": [
          "messages"
        ],
        "summary": "Finds messages status and update",
        "description": "Update messages status",
        "operationId": "update messages status by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "UserId unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "Messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },
    "/admin/{adminId}/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator adds a new messages info",
        "description": "",
        "operationId": "administrator add Messages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "Messages object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator selects messages Info",
        "description": "administrator get messages info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "user_id",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "消息类型",
            "required": false,
            "type": "integer"
          },{
            "name": "info",
            "in": "query",
            "description": "消息内容",
            "required": false,
            "type": "string"
          },{
            "name": "collectNum",
            "in": "query",
            "description": "收藏次数",
            "required": false,
            "type": "integer"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "readNum",
            "in": "query",
            "description": "阅读次数",
            "required": false,
            "type": "integer"
          },{
            "name": "label",
            "in": "query",
            "description": "消息标签",
            "required": false,
            "type": "string"
          },{
            "name": "multi_media",
            "in": "query",
            "description": "图片/视频",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/searchByRadius": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator select searchByRadius Info",
        "description": "administrator get searchByRadius info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "地理位置（格式： [纬度，经度]）",
            "required": true,
            "type": "string"
          },{
            "name": "radius",
            "in": "query",
            "description": "查询半径(单位：KM)",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/messages/{messagesId}/status":{
      "put": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator finds messages status and update",
        "description": "Administrator updates messages status",
        "operationId": "administrator update messages status by adminId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "Messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },

    "/user/{userId}/messages/{messagesId}/comments": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Add a new comments info and update messages info",
        "description": "",
        "operationId": "addComments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"commentsInfo",
            "description": "comments object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}/userComments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Select comments Info",
        "description": "get comments info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}/allComments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Select comments Info",
        "description": "get comments info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/comments/{commentsId}/readStatus": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Finds comments readStatus and update",
        "description": "Update comments readStatus ",
        "operationId": "update comments readStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "comments unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or CommentsId not found"
          }
        }
      }
    },
    "/user/{userId}/comments/{commentsId}/status":{
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Finds comments status and update",
        "description": "Update comments status ",
        "operationId": "update comments status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "comments unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or CommentsId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/messages/{messagesId}/comments": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Administrator add a new comments info and update messages info",
        "description": "",
        "operationId": "administrator add comments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"commentsInfo",
            "description": "comments object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/admin/{adminId}/user/{userId}/messages/{messagesId}/userComments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Administrator select comments Info",
        "description": "Administrator get comments info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/messages/{messagesId}/allComments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Administrator select comments Info",
        "description": "Administrator get comments info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentsNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/comments/{commentsId}/readStatus": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Administrator finds comments readStatus and update",
        "description": "Administrator update comments readStatus ",
        "operationId": "Administrator update comments readStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "comments unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "CommentsId not found"
          }
        }
      }
    },
    "/admin/{adminId}/comments/{commentsId}/status":{
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Administrator finds comments status and update",
        "description": "Administrator update comments status ",
        "operationId": "Administrator update comments status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "comments unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "CommentsId not found"
          }
        }
      }
    },

    "/user/{userId}/messages/{messagesId}/comments/{commentsId}/commentsLevelTwo": {
      "post": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Add a new commentsLevelTwo info and update comments info",
        "description": "",
        "operationId": "addCommentsLevelTwo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "commentsId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"commentsInfo",
            "description": "comments object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentsLevelTwo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/comments/{commentsId}/userCommentsLevelTwo": {
      "get": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Select commentsLevelTwo Info",
        "description": "get commentsLevelTwo info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsLevelTwoId",
            "in": "query",
            "description": "二級评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsLevelTwoMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/comments/{commentsId}/allCommentsLevelTwo": {
      "get": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Select commentsLevelTwo Info",
        "description": "get commentsLevelTwo info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsLevelTwoId",
            "in": "query",
            "description": "二級评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsLevelTwoMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/commentsLevelTwo/{commentsLevelTwoId}/readStatus": {
      "put": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Finds commentsLevelTwo readStatus and update",
        "description": "Update commentsLevelTwo readStatus ",
        "operationId": "update commentsLevelTwo readStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "path",
            "description": "commentsLevelTwo unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or CommentsLevelTwoId not found"
          }
        }
      }
    },
    "/user/{userId}/commentsLevelTwo/{commentsLevelTwoId}":{
      "delete": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Delete commentsLevelTwo info and update comments info",
        "description": "Delete commentsLevelTwo info",
        "operationId": "delete commentsLevelTwo info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "path",
            "description": "commentsLevelTwoId unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or commentsId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/messages/{messagesId}/comments/{commentsId}/commentsLevelTwo": {
      "post": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Administrator add a new commentsLevelTwo info and update comments info",
        "description": "",
        "operationId": "administrator addCommentsLevelTwo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsId",
            "in": "path",
            "description": "commentsId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"commentsInfo",
            "description": "comments object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentsLevelTwo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/admin/{adminId}/user/{userId}/comments/{commentsId}/userCommentsLevelTwo": {
      "get": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Administrator select commentsLevelTwo Info",
        "description": "Administrator get commentsLevelTwo info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsLevelTwoId",
            "in": "query",
            "description": "二級评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsLevelTwoMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/comments/{commentsId}/allCommentsLevelTwo": {
      "get": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Administrator select commentsLevelTwo Info",
        "description": "Administrator get commentsLevelTwo info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },{
            "name": "commentsLevelTwoId",
            "in": "query",
            "description": "二級评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsId",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "commentsLevelTwoMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-启用）",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "未读状态(0-未读，1-已读)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/commentsLevelTwo/{commentsLevelTwoId}/readStatus": {
      "put": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Administrator finds commentsLevelTwo readStatus and update",
        "description": "Administrator update commentsLevelTwo readStatus ",
        "operationId": "administrator update commentsLevelTwo readStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "path",
            "description": "commentsLevelTwo unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "readStatus",
            "in": "body",
            "description": "readStatus(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Read_Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or CommentsLevelTwoId not found"
          }
        }
      }
    },
    "/admin/{adminId}/commentsLevelTwo/{commentsLevelTwoId}":{
      "delete": {
        "tags": [
          "commentsLevelTwo"
        ],
        "summary": "Administrator delete commentsLevelTwo info and update comments info",
        "description": "Administrator delete commentsLevelTwo info",
        "operationId": "administrator delete commentsLevelTwo info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentsLevelTwoId",
            "in": "path",
            "description": "commentsLevelTwoId unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or commentsId not found"
          }
        }
      }
    },

    "/app": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Query app info",
        "description": "",
        "operationId": "getApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "appID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "appType",
            "description": "app类型(1-司机之家)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "device_type",
            "description": "系统类型(1-安卓 2-苹果)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "version",
            "description": "版本号",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "version_num",
            "description": "版本序号",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "min_version_num",
            "description": "最小支持版本",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "force_update",
            "description": "是否强制更新(0-不更新 1-更新)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "url",
            "description": "下载地址",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "remarks",
            "description": "备注",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "App not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/admin/{adminId}/app": {
      "post": {
        "tags": [
          "app"
        ],
        "summary": "Add a new app info",
        "description": "",
        "operationId": "AddApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }

      }
    },
    "/admin/{adminId}/app/{appId}": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app and update",
        "description": "update app info",
        "operationId": "update app info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "body",
            "in": "body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "definitions": {
    "AdminLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AdminLogin"
      }
    },
    "AdminUser": {
      "type": "object",
      "required": [
        "name",
        "realname",
        "phone",
        "password",
        "status",
        "gender",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "realname": {
          "type": "string"
        },
        "phone": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "gender": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "admin"
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UserLogin"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "phone",
        "password",
        "nikename",
        "status",
        "auth_status",
        "type",
        "last_login_on"
      ],
      "properties": {
        "phone": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "nikename": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "auth_status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "UserDetail": {
      "type": "object",
      "required": [
        "sex",
        "birthday",
        "realmname",
        "intro",
        "label",
        "truename",
        "avatar",
        "drivingtype"
      ],
      "properties": {
        "sex": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "birthday": {
          "type": "String",
          "format": "YYYY_MM_DD"
        },
        "realmname": {
          "type": "string"
        },
        "intro": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "truename": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "drivingtype": {
          "type": "string"
        }
      },
      "xml": {
        "name": "userDetail"
      }
    },
    "Relation": {
      "type": "object",
      "required": [
        "_userById",
        "type",
        "groupName",
        "status"
      ],
      "properties": {
        "_userById": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "groupName": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "relation"
      }
    },
    "Messages": {
      "type": "object",
      "required": [
        "type",
        "info",
        "address",
        "collectNum",
        "commentsNum",
        "agreeNum",
        "readNum",
        "label",
        "multi_media",
        "status"
      ],
      "properties": {
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "address": {
          "type": "Array"
        },
        "collectNum": {
          "type": "integer",
          "format": "int64"
        },
        "commentsNum": {
          "type": "integer",
          "format": "int64"
        },
        "agreeNum": {
          "type": "integer",
          "format": "int64"
        },
        "readnum": {
          "type": "integer",
          "format": "int64"
        },
        "label": {
          "type": "string"
        },
        "multi_media": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "messages"
      }
    },
    "Comments": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "commentsMsg": {
          "type": "String"
        },
        "commentsNum": {
          "type": "integer"
        },
        "agreeNum": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "comments"
      }
    },
    "CommentsLevelTwo": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "commentsLevelTwoMsg": {
          "type": "String"
        },
        "agreeNum": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "commentsLevelTwo"
      }
    },
    "App": {
      "type": "object",
      "required": [
        "app_type",
        "device_type",
        "version",
        "version_num",
        "min_version_num",
        "force_update",
        "url",
        "remarks",
        "status"
      ],
      "properties": {
        "app_type": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "device_type": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "version": {
          "type": "string"
        },
        "version_num": {
          "type": "integer",
          "format": "int64"
        },
        "min_version_num": {
          "type": "integer",
          "format": "int64"
        },
        "force_update": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "description": "app download address"
        },
        "remarks": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "App"
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "status"
      }
    },
    "Read_Status": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "read_status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "status"
      }
    },
    "StatusResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "success": {
          "type": "integer",
          "default": "true"
        },
        "n": {
          "type": "integer",
          "default": "1"
        },
        "ok": {
          "type": "integer",
          "default": "1"
        }
      },
      "xml": {
        "name": "status"
      }
    }
  }
}