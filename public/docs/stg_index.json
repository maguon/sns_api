{
  "swagger": "2.0",
  "info": {
    "description": "This a api docs",
    "version": "0.0.1",
    "title": "Driver api docs",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/sns_api"
    }
  },
  "host": "stg.myxxjs.com:9901/api/",

  "tags": [
    {
      "name": "adminUser",
      "description": "adminUser version and url management api (操作员管理)"
    },
    {
      "name": "user",
      "description": "User version and url management api (用户基本管理)"
    },
    {
      "name": "userDetail",
      "description": "UserDetail version and url management api (用户详细信息管理)"
    },
    {
      "name": "messages",
      "description": "Messages version and url management api (消息动态管理)"
    },
    {
      "name": "reviews",
      "description": "reviews version and url management api (评论管理)"
    },
    {
      "name": "praiseRecord",
      "description": "PraiseRecord version and url management api (用户点赞记录管理)"
    },
    {
      "name": "app",
      "description": "App version and url management api (版本管理)"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/adminLogin": {
      "post": {
        "tags": [
          "adminUser"
        ],
        "summary": "AdminUser login",
        "description": "",
        "operationId": "adminUser login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adminInfo",
            "description": "Admin base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser": {
      "post": {
        "tags": [
          "adminUser"
        ],
        "summary": "Add a new adminUser info",
        "description": "",
        "operationId": "addAdminUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "admin",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"adminInfo",
            "description": "AdminUser object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "adminUser"
        ],
        "summary": "Select adminUser info",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "query",
            "description": "管理员ID",
            "required": false,
            "type": "string"
          },{
            "name": "name",
            "in": "query",
            "description": "管理员名称",
            "required": false,
            "type": "string"
          },{
            "name": "realname",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "密码",
            "required": false,
            "type": "integer"
          },{
            "name": "gender",
            "in": "query",
            "description": "0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态(0-停用,1-可用)",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "管理员类型",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser/{adminUserId}": {
      "put": {
        "tags": [
          "adminUser"
        ],
        "summary": "Finds adminUser info and update",
        "description": "Update adminUser info",
        "operationId": "update adminUser info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "path",
            "description": "adminUser unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "adminUserInfo",
            "in": "body",
            "description": "AdminUser object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminUser"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/admin/{adminId}/adminUser/{adminUserId}/status":{
      "put": {
        "tags": [
          "adminUser"
        ],
        "summary": "Administrator finds messages status and update",
        "description": "Administrator updates messages status",
        "operationId": "administrator update adminUser status by adminId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminUserId",
            "in": "path",
            "description": "AdminUser unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },

    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User login",
        "description": "",
        "operationId": "user login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userInfo",
            "description": "User base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user info and null userDetail info",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "用户电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "用户密码",
            "required": false,
            "type": "string"
          },{
            "name": "nikename",
            "in": "query",
            "description": "用户昵称",
            "required": false,
            "type": "string"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（1-使用 0-禁用）",
            "required": false,
            "type": "integer"
          },{
            "name": "auth_status",
            "in": "query",
            "description": "认证状态(0-未认证,1-已认证)",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（1-普通，2-会员）",
            "required": false,
            "type": "integer"
          },{
            "name": "last_login_on",
            "in": "query",
            "description": "最后一次登录时间",
            "required": false,
            "type": "date"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/userInfoAndDetail": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select userInfo and userDetail",
        "description": "Get userInfo and userDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update",
        "description": "Update user info",
        "operationId": "update user info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user and userDetail",
        "description": "Delete user info and userDetail",
        "operationId": "delete user info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        },
        "deprecated": "true"
      }
    },
    "/admin/{adminId}/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Administrators add a new user info and null userDetail info",
        "description": "",
        "operationId": "administrator adds users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Administrators select user Info",
        "description": "Administrators get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "用户电话",
            "required": false,
            "type": "integer"
          },{
            "name": "password",
            "in": "query",
            "description": "用户密码",
            "required": false,
            "type": "string"
          },{
            "name": "nikename",
            "in": "query",
            "description": "用户昵称",
            "required": false,
            "type": "string"
          },{
            "name": "status",
            "in": "query",
            "description": "状态（1-使用 0-禁用）",
            "required": false,
            "type": "integer"
          },{
            "name": "auth_status",
            "in": "query",
            "description": "认证状态(0-未认证,1-已认证)",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（1-普通，2-会员）",
            "required": false,
            "type": "integer"
          },{
            "name": "last_login_on",
            "in": "query",
            "description": "最后一次登录时间",
            "required": false,
            "type": "date"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/userInfoAndDetail": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Administrators select userInfo and userDetail",
        "description": "Administrators get userInfo and userDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Administrators finds userInfo and update",
        "description": "Administrators updates user info",
        "operationId": "administrator updates user information by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Administrators deletes user and userDetail",
        "description": "Administrators deletes user info and userDetail",
        "operationId": "administrator Deletes User Information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        },
        "deprecated": "true"
      }
    },

    "/user/{userId}/userDetail": {
      "get": {
        "tags": [
          "userDetail"
        ],
        "summary": "Select userDetail info",
        "description": "Get userDetail info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "sex",
            "in": "query",
            "description": "性别0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "birthday",
            "in": "query",
            "description": "生日(格式：YYYY_MM_DD)",
            "required": false,
            "type": "date"
          },{
            "name": "realmname",
            "in": "query",
            "description": "个性域名",
            "required": false,
            "type": "string"
          },{
            "name": "intro",
            "in": "query",
            "description": "简介",
            "required": false,
            "type": "string"
          },{
            "name": "label",
            "in": "query",
            "description": "标签",
            "required": false,
            "type": "string"
          },{
            "name": "truename",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "avatar",
            "in": "query",
            "description": "用户头像",
            "required": false,
            "type": "string"
          },{
            "name": "drivingtype",
            "in": "query",
            "description": "驾驶证类型",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/userDetail/{userDetailId}": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Finds userDetail info and update",
        "description": "Update userDetail info",
        "operationId": "update userDetail info by userDetailId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/user/{userId}/updateDetail": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Finds userDetail info and update",
        "description": "Update userDetail info",
        "operationId": "update userDetail info by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/admin/{adminId}/userDetail": {
      "get": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators select userDetail info",
        "description": "Administrators get userDetail info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "query",
            "description": "用户详细信息ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "_userId",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },{
            "name": "sex",
            "in": "query",
            "description": "性别0:女 1:男",
            "required": false,
            "type": "integer"
          },{
            "name": "birthday",
            "in": "query",
            "description": "生日(格式：YYYY_MM_DD)",
            "required": false,
            "type": "date"
          },{
            "name": "realmname",
            "in": "query",
            "description": "个性域名",
            "required": false,
            "type": "string"
          },{
            "name": "intro",
            "in": "query",
            "description": "简介",
            "required": false,
            "type": "string"
          },{
            "name": "label",
            "in": "query",
            "description": "标签",
            "required": false,
            "type": "string"
          },{
            "name": "truename",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "avatar",
            "in": "query",
            "description": "用户头像",
            "required": false,
            "type": "string"
          },{
            "name": "drivingtype",
            "in": "query",
            "description": "驾驶证类型",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/userDetail/{userDetailId}": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators finds userDetail info and update",
        "description": "Administrators update userDetail info",
        "operationId": "administrators update userdetail information by userdetailid",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDetailId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/updateDetail": {
      "put": {
        "tags": [
          "userDetail"
        ],
        "summary": "Administrators finds userDetail info and update",
        "description": "Administrators update userDetail info",
        "operationId": "administrators update userDetail info by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "UserDetail unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "userDetailInfo",
            "in": "body",
            "description": "UserDetail object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetail"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserDetailId not found"
          }
        }
      }
    },

    "/user/{userId}/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Add a new messages info",
        "description": "",
        "operationId": "addMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "Messages object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Select messages Info",
        "description": "get messages info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "type",
            "in": "query",
            "description": "消息类型",
            "required": false,
            "type": "integer"
          },{
            "name": "info",
            "in": "query",
            "description": "消息内容",
            "required": false,
            "type": "string"
          },{
            "name": "collectNum",
            "in": "query",
            "description": "收藏次数",
            "required": false,
            "type": "integer"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "readNum",
            "in": "query",
            "description": "阅读次数",
            "required": false,
            "type": "integer"
          },{
            "name": "label",
            "in": "query",
            "description": "消息标签",
            "required": false,
            "type": "string"
          },{
            "name": "multi_media",
            "in": "query",
            "description": "图片/视频",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/searchByRadius": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Select searchByRadius Info",
        "description": "Get searchByRadius info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "地理位置（格式： [纬度，经度]）",
            "required": true,
            "type": "string"
          },{
            "name": "radius",
            "in": "query",
            "description": "查询半径(单位：KM)",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}/status":{
      "put": {
        "tags": [
          "messages"
        ],
        "summary": "Finds messages status and update",
        "description": "Update messages status",
        "operationId": "update messages status by userId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "UserId unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "Messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}": {
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Delete messages info and reviews",
        "description": "Delete messages info and reviews",
        "operationId": "delete messages info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messages unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },
    "/admin/{adminId}/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator adds a new messages info",
        "description": "",
        "operationId": "administrator add Messages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "Messages object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator selects messages Info",
        "description": "administrator get messages info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "query",
            "description": "消息ID",
            "required": false,
            "type": "string"
          },{
            "name": "user_id",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "消息类型",
            "required": false,
            "type": "integer"
          },{
            "name": "info",
            "in": "query",
            "description": "消息内容",
            "required": false,
            "type": "string"
          },{
            "name": "collectNum",
            "in": "query",
            "description": "收藏次数",
            "required": false,
            "type": "integer"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "readNum",
            "in": "query",
            "description": "阅读次数",
            "required": false,
            "type": "integer"
          },{
            "name": "label",
            "in": "query",
            "description": "消息标签",
            "required": false,
            "type": "string"
          },{
            "name": "multi_media",
            "in": "query",
            "description": "图片/视频",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/searchByRadius": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator select searchByRadius Info",
        "description": "administrator get searchByRadius info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录管理员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "地理位置（格式： [纬度，经度]）",
            "required": true,
            "type": "string"
          },{
            "name": "radius",
            "in": "query",
            "description": "查询半径(单位：KM)",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/messages/{messagesId}/status":{
      "put": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator finds messages status and update",
        "description": "Administrator updates messages status",
        "operationId": "administrator update messages status by adminId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "Messages unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "status(0 or 1)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusResponse"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },
    "/admin/{adminId}/messages/{messagesId}": {
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Administrator deletes messages info and reviews",
        "description": "Administrator deletes messages info and reviews",
        "operationId": "administrator delete messages info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messages unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or MessagesId not found"
          }
        }
      }
    },

    "/user/{userId}/messages/{messagesId}/reviews": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Add a new reviews info and update messages info",
        "description": "",
        "operationId": "addReviews",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"reviewsInfo",
            "description": "reviews object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/user/{userId}/messages/{messagesId}/userReviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Select reviews Info",
        "description": "get reviews info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "reviewsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "reviewsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/messages/{messagesId}/allReviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Select reviews Info",
        "description": "get reviews info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "reviewsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "reviewsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/reviews/{reviewsId}":{
      "delete": {
        "tags": [
          "reviews"
        ],
        "summary": "Delete reviews info and update message info",
        "description": "Delete reviews info",
        "operationId": "delete reviews info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId unique id",
            "required": true,
            "type": "string"
          },
          {
            "name": "reviewsId",
            "in": "path",
            "description": "reviewsId unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or reviewsId not found"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/messages/{messagesId}/reviews": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Administrator add a new reviews info and update messages info",
        "description": "",
        "operationId": "administrator add reviews",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "messagesId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name":"reviewsInfo",
            "description": "reviews object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      }
    },
    "/admin/{adminId}/user/{userId}/messages/{messagesId}/userReviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Administrator select reviews Info",
        "description": "Administrator get reviews info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "reviewsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "reviewsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/messages/{messagesId}/allReviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Administrator select reviews Info",
        "description": "Administrator get reviews info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "当前登录操作人员ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messagesId",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "type": "string"
          },{
            "name": "reviewsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },{
            "name": "reviewsMsg",
            "in": "query",
            "description": "评论内容",
            "required": false,
            "type": "string"
          },{
            "name": "commentNum",
            "in": "query",
            "description": "评论次数",
            "required": false,
            "type": "integer"
          },{
            "name": "agreeNum",
            "in": "query",
            "description": "点赞次数",
            "required": false,
            "type": "integer"
          },{
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },{
            "name": "del_status",
            "in": "query",
            "description": "删除状态(0-未删除，1-已删除)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/admin/{adminId}/reviews/{reviewsId}":{
      "delete": {
        "tags": [
          "reviews"
        ],
        "summary": "Administrator delete reviews info and update message info",
        "description": "Administrator delete reviews info",
        "operationId": "administrator delete reviews info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "reviewsId",
            "in": "path",
            "description": "reviewsId unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or reviewsId not found"
          }
        }
      }
    },

    "/user/{userId}/praiseRecord": {
      "post": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Add a new praiseRecord info",
        "description": "",
        "operationId": "user add PraiseRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"praiseRecordInfo",
            "description": "PraiseRecord object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraiseRecord"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }

      },
      "get": {
        "tags": [
          "praiseRecord"
        ],
        "summary": "Select praiseRecord Info",
        "description": "get praiseRecord info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "当前登录用户ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "praiseRecordId",
            "in": "query",
            "description": "点赞记录ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "_userId",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "_messageId",
            "in": "query",
            "description": "动态ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "_commentsId",
            "in": "query",
            "description": "评论ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/app": {
      "post": {
        "tags": [
          "app"
        ],
        "summary": "Add a new app info",
        "description": "",
        "operationId": "AddApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }

      },
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Query app info",
        "description": "",
        "operationId": "getApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "appType",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "device_type",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "App not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/app/{appId}": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app and update",
        "description": "update app info",
        "operationId": "update app info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "string"

          },
          {
            "name": "body",
            "in": "body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "definitions": {
    "AdminLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AdminLogin"
      }
    },
    "AdminUser": {
      "type": "object",
      "required": [
        "name",
        "realname",
        "phone",
        "password",
        "status",
        "gender",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "realname": {
          "type": "string"
        },
        "phone": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "gender": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "admin"
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UserLogin"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "phone",
        "password",
        "nikename",
        "status",
        "auth_status",
        "type",
        "last_login_on"
      ],
      "properties": {
        "phone": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "nikename": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "auth_status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "UserDetail": {
      "type": "object",
      "required": [
        "sex",
        "birthday",
        "realmname",
        "intro",
        "label",
        "truename",
        "avatar",
        "drivingtype"
      ],
      "properties": {
        "sex": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "birthday": {
          "type": "String",
          "format": "YYYY_MM_DD"
        },
        "realmname": {
          "type": "string"
        },
        "intro": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "truename": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "drivingtype": {
          "type": "string"
        }
      },
      "xml": {
        "name": "userDetail"
      }
    },
    "Messages": {
      "type": "object",
      "required": [
        "type",
        "info",
        "address",
        "collectNum",
        "commentNum",
        "agreeNum",
        "readNum",
        "label",
        "multi_media",
        "status"
      ],
      "properties": {
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "address": {
          "type": "Array"
        },
        "collectNum": {
          "type": "integer",
          "format": "int64"
        },
        "commentNum": {
          "type": "integer",
          "format": "int64"
        },
        "agreeNum": {
          "type": "integer",
          "format": "int64"
        },
        "readnum": {
          "type": "integer",
          "format": "int64"
        },
        "label": {
          "type": "string"
        },
        "multi_media": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "messages"
      }
    },
    "Reviews": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "reviewsMsg": {
          "type": "String"
        },
        "reviewsNum": {
          "type": "integer"
        },
        "agreeNum": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "reviews"
      }
    },
    "PraiseRecord": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "_userId": {
          "type": "String"
        },
        "_messageId": {
          "type": "String"
        },
        "_commentsId": {
          "type": "String"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "praiseRecord"
      }
    },
    "App": {
      "type": "object",
      "required": [
        "app_type",
        "device_type",
        "version",
        "low_version",
        "force_flag",
        "url"
      ],
      "properties": {
        "app_type": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "device_type": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "version": {
          "type": "string"
        },
        "version_num": {
          "type": "integer",
          "format": "int64"
        },
        "min_version_num": {
          "type": "integer",
          "format": "int64"
        },
        "force_update": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "description": "pet status in the store"
        }
      },
      "xml": {
        "name": "App"
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        }
      },
      "xml": {
        "name": "status"
      }
    },
    "StatusResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "success": {
          "type": "integer",
          "default": "true"
        },
        "n": {
          "type": "integer",
          "default": "1"
        },
        "ok": {
          "type": "integer",
          "default": "1"
        }
      },
      "xml": {
        "name": "status"
      }
    }
  }
}